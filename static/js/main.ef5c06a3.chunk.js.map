{"version":3,"sources":["AuthorQuiz.js","AddAuthorForm.js","serviceWorker.js","index.js"],"names":["Hero","react_default","a","createElement","className","Turn","_ref","author","books","highlight","onAnswerSelected","style","backgroundColor","none","correct","wrong","highlightToBgColour","src","imageUrl","alt","map","title","Book","key","onClick","_ref2","Score","_ref3","rightAnswerCount","totalAnswerCount","Fragment","Continue","_ref4","show","onContinue","Footer","id","AuthorQuiz","connect","state","turnData","dispatch","answer","type","_ref5","Object","assign","react_router_dom","to","AuthorForm","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","name","bookTemp","onFieldChange","bind","assertThisInitialized","handleSubmit","handleAddBook","event","preventDefault","onAddAuthor","setState","defineProperty","target","value","concat","onSubmit","htmlFor","onChange","book","React","Component","withRouter","history","push","match","AddAuthorForm_AuthorForm","Boolean","window","location","hostname","authors","imageSource","getTurnData","allBooks","reduce","p","c","i","fourRandomBooks","shuffle","slice","sample","find","some","store","Redux","arguments","length","undefined","action","isCorrect","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","es","react_router","exact","path","component","AddAuthorForm","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ef5c06a3.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./App.css\";\nimport \"./bootstrap.min.css\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nfunction Hero() {\n  return (\n    <div className=\"row\">\n      <div className=\"jumbotron col-10 offset-1\">\n        <h1>Author Quiz</h1>\n        <p>Select the book written by the author shown</p>\n      </div>\n    </div>\n  );\n}\n\nfunction Turn({ author, books, highlight, onAnswerSelected }) {\n  function highlightToBgColour(highlight) {\n    const mapping = {\n      none: \"\",\n      correct: \"green\",\n      wrong: \"red\"\n    };\n\n    return mapping[highlight];\n  }\n\n  return (\n    <div\n      className=\"row turn\"\n      style={{ backgroundColor: highlightToBgColour(highlight) }}\n    >\n      <div className=\"col-4 offset-1\">\n        <img src={author.imageUrl} className=\"authorImage\" alt=\"Author\" />\n      </div>\n      <div className=\"col-6\">\n        {books.map(title => (\n          <Book title={title} key={title} onClick={onAnswerSelected} />\n        ))}\n      </div>\n    </div>\n  );\n}\n\nTurn.propTypes = {\n  author: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    imageUrl: PropTypes.string.isRequired,\n    imageSource: PropTypes.string.isRequired,\n    books: PropTypes.arrayOf(PropTypes.string).isRequired\n  }),\n  books: PropTypes.arrayOf(PropTypes.string).isRequired,\n  onAnswerSelected: PropTypes.func.isRequired,\n  highlight: PropTypes.string.isRequired\n};\n\nfunction Book({ title, onClick }) {\n  return (\n    <div\n      className=\"answer\"\n      onClick={() => {\n        onClick(title);\n      }}\n    >\n      <h4>{title}</h4>\n    </div>\n  );\n}\n\nfunction Score({ rightAnswerCount, totalAnswerCount }) {\n  return (\n    <React.Fragment>\n      {totalAnswerCount !== 0 && (\n        <div className=\"col-11\">\n          <div className=\"float-right score\">\n            {rightAnswerCount}/{totalAnswerCount}\n          </div>\n        </div>\n      )}\n    </React.Fragment>\n  );\n}\n\nfunction Continue({ show, onContinue }) {\n  return (\n    <div className=\"row continue\">\n      {show ? (\n        <div className=\"col-11\">\n          <button\n            className=\"btn btn-primary btn-lg float-right\"\n            onClick={onContinue}\n          >\n            Continue\n          </button>\n        </div>\n      ) : null}\n    </div>\n  );\n}\n\nfunction Footer() {\n  return (\n    <div id=\"footer\" className=\"row\">\n      <div className=\"col-12\">\n        <p className=\"text-muted credit\">All images are from Google</p>\n      </div>\n    </div>\n  );\n}\n\nfunction mapStateToProps(state) {\n  return {\n    turnData: state.turnData,\n    highlight: state.highlight,\n    rightAnswerCount: state.rightAnswerCount,\n    totalAnswerCount: state.totalAnswerCount\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    onAnswerSelected: answer => {\n      dispatch({ type: \"ANSWER_SELECTED\", answer });\n    },\n    onContinue: () => {\n      dispatch({ type: \"CONTINUE\" });\n    }\n  };\n}\n\nconst AuthorQuiz = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(function({\n  turnData,\n  highlight,\n  rightAnswerCount,\n  totalAnswerCount,\n  onAnswerSelected,\n  onContinue\n}) {\n  return (\n    <div className=\"container-fluid\">\n      <Hero />\n      <Score\n        rightAnswerCount={rightAnswerCount}\n        totalAnswerCount={totalAnswerCount}\n      />\n      <Turn\n        {...turnData}\n        highlight={highlight}\n        onAnswerSelected={onAnswerSelected}\n      />\n      <Continue show={highlight === \"correct\"} onContinue={onContinue} />\n      <p>\n        <Link to=\"/add\">Add an Author</Link>\n      </p>\n      <Footer />\n    </div>\n  );\n});\n\nexport default AuthorQuiz;\n","import React from \"react\";\nimport \"./AddAuthorForm.css\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\n\nclass AuthorForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: \"\",\n      imageUrl: \"\",\n      books: [],\n      bookTemp: \"\"\n    };\n    this.onFieldChange = this.onFieldChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleAddBook = this.handleAddBook.bind(this);\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    this.props.onAddAuthor(this.state);\n  }\n\n  onFieldChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  handleAddBook(event) {\n    this.setState({\n      books: this.state.books.concat([this.state.bookTemp]),\n      bookTemp: \"\"\n    });\n  }\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <div className=\"AddAuthorForm_input\">\n          <label htmlFor=\"name\">Name</label>\n          <input\n            type=\"text\"\n            name=\"name\"\n            value={this.state.name}\n            onChange={this.onFieldChange}\n          />\n        </div>\n        <div className=\"AddAuthorForm_input\">\n          <label htmlFor=\"imageUrl\">Image URL</label>\n          <input\n            type=\"text\"\n            name=\"imageUrl\"\n            value={this.state.imageUrl}\n            onChange={this.onFieldChange}\n          />\n        </div>\n        <div className=\"AddAuthorForm_input\">\n          <label htmlFor=\"bookTemp\">Books</label>\n          {this.state.books.map(book => (\n            <p key={book}>{book}</p>\n          ))}\n          <input\n            type=\"text\"\n            name=\"bookTemp\"\n            value={this.state.bookTemp}\n            onChange={this.onFieldChange}\n          />\n          <input type=\"button\" value=\"+\" onClick={this.handleAddBook} />\n        </div>\n        <input type=\"submit\" value=\"Add\" />\n      </form>\n    );\n  }\n}\n\nfunction AddAuthorForm({ match, onAddAuthor }) {\n  return (\n    <div className=\"AddAuthorForm\">\n      <h1>Add Author</h1>\n      <AuthorForm onAddAuthor={onAddAuthor} />\n    </div>\n  );\n}\n\nfunction mapDispatchToProps(dispatch, props) {\n  return {\n    onAddAuthor: author => {\n      dispatch({ type: \"ADD_AUTHOR\", author });\n      props.history.push(\"/\");\n    }\n  };\n}\n\nexport default withRouter(\n  connect(\n    () => {},\n    mapDispatchToProps\n  )(AddAuthorForm)\n);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport * as Redux from \"redux\";\nimport * as ReactRedux from \"react-redux\";\nimport \"./index.css\";\nimport AuthorQuiz from \"./AuthorQuiz\";\nimport AddAuthorForm from \"./AddAuthorForm\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { shuffle, sample } from \"underscore\";\n\nconst authors = [\n  {\n    name: \"Mark Twain\",\n    imageUrl: \"images/authors/marktwain.jpg\",\n    imageSource: \"Wikimedia Commons\",\n    books: [\"The Adventures of Huckleberry Finn\"]\n  },\n  {\n    name: \"Joseph Conrad\",\n    imageUrl: \"images/authors/josephconrad.jpg\",\n    imageSource: \"Wikimedia Commons\",\n    books: [\"Heart of Darkness\"]\n  },\n  {\n    name: \"J.K. Rowling\",\n    imageUrl: \"images/authors/jk.jpg\",\n    imageSource: \"Wikimedia Commons\",\n    books: [\"Harry Potter and the Philosopher's Stone\"]\n  },\n  {\n    name: \"Stephen King\",\n    imageUrl: \"images/authors/sk.jpg\",\n    imageSource: \"Wikimedia Commons\",\n    books: [\"The Shining\", \"IT\"]\n  },\n  {\n    name: \"Charles Dickens\",\n    imageUrl: \"images/authors/charles.jpg\",\n    imageSource: \"Wikimedia Commons\",\n    books: [\"David Copperfield\", \"A Tale of Two Cities\"]\n  },\n  {\n    name: \"William Shakespeare\",\n    imageUrl: \"images/authors/ws.jpg\",\n    imageSource: \"Wikimedia Commons\",\n    books: [\"Hamlet\", \"Macbeth\", \"Romeo and Juliet\"]\n  }\n];\n\nfunction getTurnData(authors) {\n  const allBooks = authors.reduce(function(p, c, i) {\n    return p.concat(c.books);\n  }, []);\n\n  const fourRandomBooks = shuffle(allBooks).slice(0, 4);\n  const answer = sample(fourRandomBooks);\n\n  return {\n    books: fourRandomBooks,\n    author: authors.find(author => author.books.some(title => title === answer))\n  };\n}\n\nfunction reducer(\n  state = {\n    authors,\n    turnData: getTurnData(authors),\n    highlight: \"\",\n    rightAnswerCount: 0,\n    totalAnswerCount: 0\n  },\n  action\n) {\n  switch (action.type) {\n    case \"ANSWER_SELECTED\":\n      const isCorrect = state.turnData.author.books.some(\n        book => book === action.answer\n      );\n      return Object.assign({}, state, {\n        highlight: isCorrect ? \"correct\" : \"wrong\",\n        rightAnswerCount: isCorrect\n          ? ++state.rightAnswerCount\n          : state.rightAnswerCount,\n        totalAnswerCount: ++state.totalAnswerCount\n      });\n    case \"CONTINUE\":\n      return Object.assign({}, state, {\n        highlight: \"\",\n        turnData: getTurnData(state.authors)\n      });\n    case \"ADD_AUTHOR\":\n      return Object.assign({}, state, {\n        authors: state.authors.concat([action.author])\n      });\n    default:\n      return state;\n  }\n}\n\nlet store = Redux.createStore(\n  reducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nReactDOM.render(\n  <BrowserRouter>\n    <ReactRedux.Provider store={store}>\n      <React.Fragment>\n        <Route exact path=\"/\" component={AuthorQuiz} />\n        <Route exact path=\"/add\" component={AddAuthorForm} />\n      </React.Fragment>\n    </ReactRedux.Provider>\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}